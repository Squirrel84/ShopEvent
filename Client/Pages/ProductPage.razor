@page "/products"
@using ShopEvent.Domain
@using System.Text; 
@using System.Text.Json;
@inject HttpClient Http

<h1>Products</h1>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>SKU</th>
                <th>Product</th>
                <th>Type</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.ProductSKU</td>
                    <td>@product.ProductTitle</td>
                    <td>@product.ProductType</td>
                    <td>@product.Price</td>
                    <td><button class="btn btn-primary" @onclick="() => Buy(product)">Buy me</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("Product");
    }

    private async Task Buy(Product product)
    {
        var postRequest = new HttpRequestMessage(HttpMethod.Post, "Product");

        var postBody = new { ProductId = product.ProductId };

        postRequest.Content = new StringContent(JsonSerializer.Serialize(postBody), Encoding.UTF8, "application/json");

        var response = await Http.SendAsync(postRequest);
    }
}
